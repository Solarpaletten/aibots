#!/bin/bash

# üöÄ SOLAR v2.0 - –°–∫—Ä–∏–ø—Ç—ã –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
# –ê–≤—Ç–æ—Ä: SOLAR Team

echo "üöÄ SOLAR v2.0 - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞"
echo "=============================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 18+ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
    exit 1
fi

echo "‚úÖ Node.js: $(node --version)"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–∞
check_port() {
    local port=$1
    if lsof -Pi :$port -sTCP:LISTEN -t >/dev/null; then
        echo "‚ö†Ô∏è  –ü–æ—Ä—Ç $port –∑–∞–Ω—è—Ç. –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å..."
        kill -9 $(lsof -Pi :$port -sTCP:LISTEN -t) 2>/dev/null || true
        sleep 2
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç—ã
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..."
check_port 3000
check_port 4000

# 1. –°–ö–†–ò–ü–¢ –£–°–¢–ê–ù–û–í–ö–ò –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô
install_dependencies() {
    echo ""
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    echo "=============================="
    
    # Backend
    echo "üîß Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    cd b/ || exit 1
    if [ ! -d "node_modules" ]; then
        npm install
    else
        echo "‚úÖ Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
    
    # Frontend
    echo "üé® Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    cd ../f/ || exit 1
    if [ ! -d "node_modules" ]; then
        npm install
    else
        echo "‚úÖ Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"  
    fi
    
    cd .. || exit 1
    echo "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
}

# 2. –°–ö–†–ò–ü–¢ –ù–ê–°–¢–†–û–ô–ö–ò ENVIRONMENT
setup_environment() {
    echo ""
    echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ environment —Ñ–∞–π–ª–æ–≤..."
    echo "=================================="
    
    # Backend .env
    if [ ! -f "b/.env" ]; then
        echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ backend .env..."
        cp b/.env.example b/.env
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        sed -i 's/PORT=3001/PORT=4000/g' b/.env 2>/dev/null || true
        sed -i 's/NODE_ENV=production/NODE_ENV=development/g' b/.env 2>/dev/null || true
        
        echo "‚úÖ Backend .env —Å–æ–∑–¥–∞–Ω"
    else
        echo "‚úÖ Backend .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
    
    # Frontend .env
    if [ ! -f "f/.env" ]; then
        echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ frontend .env..."
        cp f/.env.example f/.env
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        cat > f/.env << EOF
# Backend API URL
VITE_API_URL=http://localhost:4000/api/v2

# Socket.IO URL  
VITE_SOCKET_URL=http://localhost:4000

# Environment
VITE_NODE_ENV=development

# App Configuration
VITE_APP_NAME="SOLAR Translator"
VITE_APP_VERSION="2.0.0"
EOF
        
        echo "‚úÖ Frontend .env —Å–æ–∑–¥–∞–Ω"
    else
        echo "‚úÖ Frontend .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# 3. –§–£–ù–ö–¶–ò–Ø –ó–ê–ü–£–°–ö–ê BACKEND
start_backend() {
    echo ""
    echo "üî• –ó–∞–ø—É—Å–∫ Backend —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ—Ä—Ç 4000)..."
    echo "======================================="
    
    cd b/ || exit 1
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    if [ ! -f "src/index.js" ]; then
        echo "‚ùå –§–∞–π–ª src/index.js –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    echo "üöÄ –ó–∞–ø—É—Å–∫: npm run dev"
    npm run dev &
    BACKEND_PID=$!
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ backend..."
    sleep 5
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—É—Å–∫
    if curl -s http://localhost:4000/health > /dev/null 2>&1; then
        echo "‚úÖ Backend –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ! (PID: $BACKEND_PID)"
        echo "üåê Health Check: http://localhost:4000/health"
        echo "üìä API Base: http://localhost:4000/api/v2"
    else
        echo "‚ùå Backend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏."
    fi
    
    cd .. || exit 1
}

# 4. –§–£–ù–ö–¶–ò–Ø –ó–ê–ü–£–°–ö–ê FRONTEND
start_frontend() {
    echo ""
    echo "üé® –ó–∞–ø—É—Å–∫ Frontend —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ—Ä—Ç 3000)..."
    echo "========================================"
    
    cd f/ || exit 1
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    if [ ! -f "package.json" ]; then
        echo "‚ùå –§–∞–π–ª package.json –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    echo "üöÄ –ó–∞–ø—É—Å–∫: npm run dev"
    npm run dev &
    FRONTEND_PID=$!
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ frontend..."
    sleep 5
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—É—Å–∫
    if curl -s http://localhost:3000 > /dev/null 2>&1; then
        echo "‚úÖ Frontend –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ! (PID: $FRONTEND_PID)"
        echo "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:3000"
    else
        echo "‚ùå Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏."
    fi
    
    cd .. || exit 1
}

# 5. –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ó–ê–ü–£–°–ö–ê
main() {
    echo "üéØ –†–µ–∂–∏–º: –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ SOLAR v2.0"
    echo ""
    
    # 1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    install_dependencies
    
    # 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ environment
    setup_environment
    
    # 3. –ó–∞–ø—É—Å–∫ backend
    start_backend
    
    # 4. –ó–∞–ø—É—Å–∫ frontend  
    start_frontend
    
    echo ""
    echo "üéâ SOLAR v2.0 –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    echo "================================"
    echo ""
    echo "üì± URLs:"
    echo "  üåê Frontend:    http://localhost:3000"
    echo "  üñ•Ô∏è  Backend:     http://localhost:4000"  
    echo "  üîç Health:      http://localhost:4000/health"
    echo "  üìä API:         http://localhost:4000/api/v2"
    echo ""
    echo "üéÆ –ö–æ–º–∞–Ω–¥—ã:"
    echo "  Ctrl+C      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–µ—Ä–∞"
    echo "  ./restart   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å"
    echo "  ./logs      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo ""
    echo "‚ú® –ì–æ—Ç–æ–≤–æ! –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000 –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
    echo ""
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    wait
}

# 6. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –°–ö–†–ò–ü–¢–´

# –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ (—Ç–æ–ª—å–∫–æ backend)
start_backend_only() {
    echo "üî• –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫: —Ç–æ–ª—å–∫–æ Backend"
    check_port 4000
    setup_environment
    start_backend
    echo "‚úÖ Backend –≥–æ—Ç–æ–≤ –Ω–∞ http://localhost:4000"
    wait
}

# –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ (—Ç–æ–ª—å–∫–æ frontend)
start_frontend_only() {
    echo "üé® –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫: —Ç–æ–ª—å–∫–æ Frontend"
    check_port 3000
    setup_environment
    start_frontend
    echo "‚úÖ Frontend –≥–æ—Ç–æ–≤ –Ω–∞ http://localhost:3000"
    wait
}

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞
case "${1:-full}" in
    "backend"|"b")
        start_backend_only
        ;;
    "frontend"|"f")
        start_frontend_only
        ;;
    "full"|""|*)
        main
        ;;
esac