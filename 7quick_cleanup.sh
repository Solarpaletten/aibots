#!/bin/bash

echo "üöÄ SOLAR v2.0 - –ë—ã—Å—Ç—Ä–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"
echo "======================================"

# 1. –°–æ–∑–¥–∞–µ–º –∏–¥–µ–∞–ª—å–Ω—ã–π .gitignore
cat > .gitignore << 'EOF'
# Dependencies
node_modules/
*/node_modules/
**/node_modules/

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
*.env

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock
.DS_Store
*.tgz
*.tar.gz

# Coverage directory used by tools like istanbul
coverage/
*.lcov
.nyc_output

# Build outputs
dist/
build/
*.map

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Package locks (keep only one)
package-lock.js

# Database
*.sqlite
*.sqlite3

# API Keys and Secrets
*.key
*.pem
config/secrets.js
**/openai-key.txt

# Uploads
uploads/
temp/
EOF

echo "‚úÖ .gitignore —Å–æ–∑–¥–∞–Ω"

# 2. –£–¥–∞–ª—è–µ–º –≤—Å–µ node_modules –ø–∞–ø–∫–∏
echo "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ node_modules..."
find . -name "node_modules" -type d -exec rm -rf {} + 2>/dev/null || true

# 3. –£–¥–∞–ª—è–µ–º .env —Ñ–∞–π–ª—ã —Å —Å–µ–∫—Ä–µ—Ç–∞–º–∏
echo "üîí –û—á–∏—Å—Ç–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤..."
find . -name ".env" -not -path "./.env.example" -delete 2>/dev/null || true

# 4. –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
echo "üßπ –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
find . -name ".DS_Store" -delete 2>/dev/null || true
find . -name "*.log" -delete 2>/dev/null || true
find . -name "package-lock.js" -delete 2>/dev/null || true

# 5. –°–æ–∑–¥–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ .env.example —Ñ–∞–π–ª—ã
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö .env.example..."

cat > b/.env.example << 'EOF'
# Database
DATABASE_URL="postgresql://user:password@localhost:5432/solar_db"

# API Keys (replace with your actual keys)
OPENAI_API_KEY="your-openai-api-key-here"
TELEGRAM_BOT_TOKEN="your-telegram-bot-token-here"

# Server Configuration
PORT=3001
NODE_ENV=development

# JWT Secret
JWT_SECRET="your-super-secret-jwt-key-here"

# CORS Origin
CORS_ORIGIN="http://localhost:3000"
EOF

cat > f/.env.example << 'EOF'
# Backend API URL
VITE_API_URL="http://localhost:3001"

# Environment
VITE_NODE_ENV=development

# App Configuration
VITE_APP_NAME="SOLAR Translator"
VITE_APP_VERSION="2.0.0"
EOF

echo "‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ .env.example —Å–æ–∑–¥–∞–Ω—ã"

# 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å
echo ""
echo "üîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê:"
echo "====================="

# –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
FILE_COUNT=$(find . -type f | wc -l | tr -d ' ')
echo "üìÅ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: $FILE_COUNT"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º node_modules
if find . -name "node_modules" -type d | head -1 | grep -q node_modules; then
    echo "‚ùå –í–ù–ò–ú–ê–ù–ò–ï: node_modules –≤—Å–µ –µ—â–µ –µ—Å—Ç—å!"
else
    echo "‚úÖ node_modules —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª—ã
ENV_COUNT=$(find . -name ".env" -not -name "*.example" | wc -l | tr -d ' ')
if [ "$ENV_COUNT" -gt 0 ]; then
    echo "‚ùå –í–ù–ò–ú–ê–ù–ò–ï: –ù–∞–π–¥–µ–Ω—ã .env —Ñ–∞–π–ª—ã —Å —Å–µ–∫—Ä–µ—Ç–∞–º–∏!"
    find . -name ".env" -not -name "*.example"
else
    echo "‚úÖ –°–µ–∫—Ä–µ—Ç–Ω—ã–µ .env —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞
TOTAL_SIZE=$(du -sh . | cut -f1)
echo "üíæ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞: $TOTAL_SIZE"

echo ""
echo "üéØ –§–ê–ô–õ–´ –î–õ–Ø –û–¢–ü–†–ê–í–ö–ò –í GITHUB:"
echo "=============================="
git status --porcelain 2>/dev/null | head -20 || echo "Git –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"

echo ""
echo "üöÄ –ì–û–¢–û–í–û! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ GitHub:"
echo "git add ."
echo "git commit -m 'üöÄ SOLAR v2.0 - Clean professional setup'"
echo "git push -u origin main"
